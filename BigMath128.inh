CAT_INLINE void u128_set(u128 &r, const u64 x)
{
	r = x;
}

CAT_INLINE u128 u128_sum(const u64 x, const u64 y)
{
	return (u128)x + y;
}

CAT_INLINE u128 u128_diff(const u64 x, const u64 y)
{
	return (s128)x - y;
}

CAT_INLINE void u128_add(u128 &r, const u128 x)
{
	r += x;
}

CAT_INLINE void u128_add(u128 &r, const u64 x)
{
	r += x;
}

CAT_INLINE void u128_add_carry(u128 &r, const u64 x)
{
	r = (u128)x + (u64)(r >> 64);
}

CAT_INLINE void u128_add_borrow(u128 &r, const u64 x)
{
	r = ((s128)r >> 64) + x;
}

CAT_INLINE void u128_sub(u128 &r, const u128 x)
{
	r = (s128)r - x;
}

CAT_INLINE void u128_sub(u128 &r, const u64 x)
{
	r = (s128)r - x;
}

CAT_INLINE void u128_lshift(u128 &r, int shift)
{
	r <<= shift;
}

CAT_INLINE u128 u128_prod(const u64 x, const u64 y)
{
	return (u128)x * y;
}

CAT_INLINE u128 u128_prod_sum(const u64 x, const u64 y, const u64 z)
{
	return (u128)x * y + z;
}

CAT_INLINE u128 u128_prod_63(const u64 x, const u64 y)
{
	return (u128)x * y;
}

CAT_INLINE u64 u128_high(const u128 x)
{
	return (u64)(x >> 64);
}

CAT_INLINE u64 u128_low(const u128 x)
{
	return (u64)x;
}

